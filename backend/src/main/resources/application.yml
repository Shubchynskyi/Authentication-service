server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      force: true
      enabled: true

spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: "*"
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: email

admin:
  enabled: ${ADMIN_ENABLED}
  email: ${ADMIN_EMAIL}
  username: ${ADMIN_USERNAME}

frontend:
  url: ${FRONTEND_URL}

logging:
  level:
    root: INFO
    '[com.authenticationservice]': DEBUG
    '[org.springframework.security]': DEBUG
  charset:
    console: UTF-8
    file: UTF-8

jwt:
  access-secret: ${JWT_ACCESS_SECRET}
  refresh-secret: ${JWT_REFRESH_SECRET}
  access-expiration: 900000 # 15 minutes
  refresh-expiration: 604800000 # 7 days